$ eksctl create cluster --name dev --region eu-west-1
$ aws eks update-kubeconfig --name dev --region eu-west-1
$ kubectl get nodes
$ curl -O https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.7.2/docs/install/iam_policy.json 
$ aws iam create-policy     --policy-name AWSLoadBalancerControllerIAMPolicy     --policy-document file://iam_policy.json
$ eksctl utils associate-iam-oidc-provider --region=eu-west-1 --cluster=dev --approve
$ eksctl create iamserviceaccount   --cluster=dev   --namespace=kube-system   --name=aws-load-balancer-controller   --role-name AmazonEKSLoadBalancerControllerRole   --attach-policy-arn=arn:aws:iam::XXXXXXXXXXXX:policy/AWSLoadBalancerControllerIAMPolicy   --approve
$ helm repo add eks https://aws.github.io/eks-charts
$ helm repo update eks
$ helm repo list
$ helm install aws-load-balancer-controller eks/aws-load-balancer-controller   -n kube-system   --set clusterName=dev   --set serviceAccount.create=false   --set serviceAccount.name=aws-load-balancer-controller 
$ helm search repo eks/aws-load-balancer-controller --versions
$ kubectl get deployment -n kube-system aws-load-balancer-controller
$ helm install --create-namespace --namespace hello-kubernetes v1 deploy/helm/hello-kubernetes --set message="You are reaching hello-kubernetes version 1" --set ingress.configured=true --set service.type="ClusterIP"
$ helm install --create-namespace --namespace hello-kubernetes v2 deploy/helm/hello-kubernetes --set message="You are reaching hello-kubernetes version 2" --set ingress.configured=true --set service.type="ClusterIP"
$ helm --help
$ kubectl get deployments
$ kubectl get deployments -A
$ helm list -A
$ ode hello-kubernetes-ingress.yaml
$ kubectl get all -n hello-kubernetes
$ kubectl apply -f hello-kubernetes-ingress.yaml 
$ kubectl get ingress -n hello-kubernetes
$ kubectl get ingress -n hello-kubernetes -o=jsonpath='{.items[0].status.loadBalancer.ingress[0].hostname}'
$ ELB_URL=$(kubectl get ingress -n hello-kubernetes -o=jsonpath='{.items[0].status.loadBalancer.ingress[0].hostname}')
$ echo $ELB_URL
$ while true; do curl -s $ELB_URL
$ while true; do curl -s $ELB_URL; sleep 1; done
$ while true; do curl -s $ELB_URL | grep version; sleep 1; done
$ while true; do curl -s k8s-hellokub-hellokub-1c21b68bea-510991637.eu-west-1.elb.amazonaws.com | grep version; sleep 1; done
$ while true; do curl -s -H "HeaderName: HeaderValue1" k8s-hellokub-hellokub-1c21b68bea-510991637.eu-west-1.elb.amazonaws.com | grep version; sleep 1; done

